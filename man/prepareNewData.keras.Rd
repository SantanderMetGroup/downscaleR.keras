% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepareNewData.keras.R
\name{prepareNewData.keras}
\alias{prepareNewData.keras}
\title{Prepare newdata for predictions going to be donw with a keras model}
\usage{
prepareNewData.keras(newdata, data.structure)
}
\arguments{
\item{newdata}{A grid containing the prediction data.}

\item{data.structure}{A structure, as returned by \code{\link{prepareData.keras}}}
}
\value{
A named list with the components required by downscalePredict.keras in order to perform the predictions
}
\description{
Prepare the prediction data according to the definition of the keras deep model's experiment
}
\examples{
# Loading data
require(transformeR)
data("VALUE_Iberia_tas")
y <- VALUE_Iberia_tas
data("NCEP_Iberia_hus850", "NCEP_Iberia_psl", "NCEP_Iberia_ta850")
x <- makeMultiGrid(NCEP_Iberia_hus850, NCEP_Iberia_psl, NCEP_Iberia_ta850)
# We divide in train and test data and standardize the predictors 
# using transformeR functions subsetGrid and scaleGrid, respectively.
xT <- subsetGrid(x,years = 1983:1995)
xt <- subsetGrid(x,years = 1996:2002) \%>\% scaleGrid(base = xT, type = "standardize")
xT <- scaleGrid(xT,type = "standardize")
yT <- subsetGrid(y,years = 1983:1995)
yt <- subsetGrid(y,years = 1996:2002)
# Preparing the predictors for training...
xy.T <- prepareData.keras(x = xT, y = yT, 
                          first.connection = "conv",
                          last.connection = "dense",
                          channels = "last")
# Preparing the predictors for prediction...
xy.t <- prepareNewData.keras(newdata = xt,data.structure = xy.T)
str(xy.t)
}
\seealso{
downscaleTrain.keras for training a downscaling deep model with keras
downscalePredict.keras for predicting with a keras model
prepareData.keras for predictor preparation of training data

\href{https://github.com/SantanderMetGroup/downscaleR/wiki/preparing-predictor-data}{downscaleR Wiki} for preparing predictors for downscaling and seasonal forecasting.
}
\author{
J BaÃ±o-Medina
}
\concept{downscaling.keras.helpers}
