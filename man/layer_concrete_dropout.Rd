% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/concreteDropout.R
\name{layer_concrete_dropout}
\alias{layer_concrete_dropout}
\title{Concrete dropout keras layer.}
\usage{
layer_concrete_dropout(
  object,
  layer,
  weight_regularizer = 1e-06,
  dropout_regularizer = 1e-05,
  init_min = 0.1,
  init_max = 0.1,
  is_mc_dropout = TRUE,
  name = NULL,
  trainable = TRUE
)
}
\arguments{
\item{object}{Model or layer object}

\item{layer}{A layer instance.}

\item{weight_regularizer}{A positive number that penalizes the weights
of the layer according to L1 or L2 regularization.}

\item{dropout_regularizer}{A positive number adequate to initialize the dropout probability}

\item{init_min}{.}

\item{init_max}{.}

\item{is_mc_dropout}{Wether Monte-Carlo dropout is applied or not. Default to TRUE.}

\item{name}{An optional name string for the layer. 
Should be unique in a model (do not reuse the same name twice). 
It will be autogenerated if it isn't provided.}

\item{trainable}{Whether the layer weights will be updated during training.}
}
\description{
This function is for instantiating custom concrete dropout class layer. 
It allows to learn the dropout probability for a given `Dense' layer.
}
\details{
The original source of this function can be found in this reference Keydana (2018, Nov. 12). 
RStudio AI Blog: You sure? A Bayesian approach to obtaining uncertainty estimates from neural networks. 
Retrieved from https://blogs.rstudio.com/tensorflow/posts/2018-11-12-uncertainty_estimates_dropout/
}
\author{
J. Bano-Medina
}
